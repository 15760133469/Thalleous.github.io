(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{466:function(v,_,e){"use strict";e.r(_);var t=e(2),o=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"},[v._v("说明")]),_("p",[v._v("这是vue模块的vue-router的摘要内容，"),_("code",[v._v("vuepress")]),v._v("提供的语法块")])]),v._v(" "),_("h2",{attrs:{id:"vue-router"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue-router"}},[v._v("#")]),v._v(" Vue-Router")]),v._v(" "),_("blockquote",[_("p",[v._v("vue路由的不同模式，有什么区别")])]),v._v(" "),_("p",[v._v("1.Hash模式")]),v._v(" "),_("p",[v._v("哈希模式用"),_("code",[v._v("createWebHashHistory()")]),v._v("创建")]),v._v(" "),_("p",[v._v("哈希模式在内部传递的实际URL之前用了一个哈希字符'#'，由于URL部分没有发送到服务器，所以不需要在服务器上做特殊处理。")]),v._v(" "),_("p",[v._v("2.HTML5模式")]),v._v(" "),_("p",[v._v("HTML5模式用"),_("code",[v._v("createWebHistory()")]),v._v("创建，更推荐使用该模式")]),v._v(" "),_("p",[v._v("这种模式在观感上会更加正常")]),v._v(" "),_("p",[v._v("该模式有一个小问题：vue的应用是单页的客户端应用，需要有适当的客户端配置。如果缺失了这部分配置，直接访问URL会得到404错误。")]),v._v(" "),_("p",[v._v("解决方法：在服务器上添加一个简单的回退路由，如果URL匹配不到任何静态资源，就回退到index.html页面。")]),v._v(" "),_("blockquote",[_("p",[v._v("路由守卫")])]),v._v(" "),_("p",[v._v("1.组件守卫：")]),v._v(" "),_("ul",[_("li",[v._v("beforeRouteEnter")]),v._v(" "),_("li",[v._v("beforeRouteUpdate")]),v._v(" "),_("li",[v._v("beforeRouteLeave")])]),v._v(" "),_("p",[v._v("2.全局守卫：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("全局前置守卫：router.beforeEach()")]),v._v(" "),_("p",[v._v("当一个导航触发时，全局前置守卫按照创建顺序调用")])]),v._v(" "),_("li",[_("p",[v._v("全局解析守卫：router.beforeResolve()")]),v._v(" "),_("p",[v._v("解析守卫刚好会在导航被确认之前、"),_("strong",[v._v("所有组件内守卫和异步路由组件被解析之后")]),v._v("调用")])]),v._v(" "),_("li",[_("p",[v._v("全局后置钩子：router.afterEach()")]),v._v(" "),_("p",[v._v("常用于分析、更改页面标题、声明页面等辅助功能")])])]),v._v(" "),_("p",[v._v("3.独享守卫：")]),v._v(" "),_("p",[v._v("​\tbeforeEnter()：在路由配置上定义独享守卫，"),_("strong",[v._v("只在进入路由时触发")]),v._v("\n4.完整的解析流程：")]),v._v(" "),_("ol",[_("li",[v._v("导航被触发。")]),v._v(" "),_("li",[v._v("在失活的组件里调用 "),_("code",[v._v("beforeRouteLeave")]),v._v(" 守卫。")]),v._v(" "),_("li",[v._v("调用全局的 "),_("code",[v._v("beforeEach")]),v._v(" 守卫。")]),v._v(" "),_("li",[v._v("在重用的组件里调用 "),_("code",[v._v("beforeRouteUpdate")]),v._v(" 守卫(2.2+)。")]),v._v(" "),_("li",[v._v("在路由配置里调用 "),_("code",[v._v("beforeEnter")]),v._v("。")]),v._v(" "),_("li",[v._v("解析异步路由组件。")]),v._v(" "),_("li",[v._v("在被激活的组件里调用 "),_("code",[v._v("beforeRouteEnter")]),v._v("。")]),v._v(" "),_("li",[v._v("调用全局的 "),_("code",[v._v("beforeResolve")]),v._v(" 守卫(2.5+)。")]),v._v(" "),_("li",[v._v("导航被确认。")]),v._v(" "),_("li",[v._v("调用全局的 "),_("code",[v._v("afterEach")]),v._v(" 钩子。")]),v._v(" "),_("li",[v._v("触发 DOM 更新。")]),v._v(" "),_("li",[v._v("调用 "),_("code",[v._v("beforeRouteEnter")]),v._v(" 守卫中传给 "),_("code",[v._v("next")]),v._v(" 的回调函数，创建好的组件实例会作为回调函数的参数传入。")])])])}),[],!1,null,null,null);_.default=o.exports}}]);